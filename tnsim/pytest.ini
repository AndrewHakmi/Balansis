[tool:pytest]
# pytest configuration for TNSIM

# Minimum pytest version
minversion = 7.0

# Directories for test discovery
testpaths = tests

# Patterns for test file discovery
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Markers for test categorization
markers =
    unit: Unit tests of individual components
    integration: Integration tests of component interactions
    performance: Performance tests
    slow: Slow tests (more than 5 seconds)
    fast: Fast tests (less than 1 second)
    database: Tests requiring database connection
    cache: Caching tests
    parallel: Parallel operation tests
    balansis: Balansis integration tests
    api: API endpoint tests
    math: Mathematical algorithm tests
    convergence: Series convergence tests
    compensation: Compensation algorithm tests
    stability: Numerical stability tests
    memory: Memory usage tests
    network: Tests requiring network connection
    gpu: Tests requiring GPU
    regression: Regression tests
    smoke: Smoke tests of core functionality

# Additional options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=tnsim
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml
    --cov-fail-under=80
    --durations=10
    --maxfail=5
    -ra
    --disable-warnings

# Warning filters
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*unclosed.*:ResourceWarning
    error::tnsim.core.exceptions.TNSIMWarning

# Asyncio settings
asyncio_mode = auto

# Logging settings for tests
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Code coverage settings
[coverage:run]
source = tnsim
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */migrations/*
    */examples/*
    */docs/*
    setup.py
    conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml